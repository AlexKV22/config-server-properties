spring.datasource.url=jdbc:postgresql://localhost:5432/aleksandrkakovkin
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.info.headers=true
app.kafka.topic=test-topic


spring.application.name=userService
server.port=8080


eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

spring.kafka.producer.properties.retries= 0
spring.kafka.producer.properties.acks=0
spring.kafka.producer.properties.delivery.timeout.ms=5000
spring.kafka.producer.properties.max.block.ms=3000
spring.kafka.producer.properties.request.timeout.ms= 2000

resilience4j.circuitbreaker.instances.MyCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.MyCircuitBreaker.slidingWindowSize=5
resilience4j.circuitbreaker.instances.MyCircuitBreaker.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.MyCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.MyCircuitBreaker.waitDurationInOpenState=10s
